--USE Cyclistic

----Total number of rides for each type of rider.

--CREATE VIEW total_rides AS
--SELECT 
--    member_casual,
--    COUNT(*) AS number_of_rides
--FROM All_2022_Trips
--GROUP BY member_casual;

----Average ride length for each type of rider.

--CREATE VIEW avg_ride_length AS
--SELECT 
--    member_casual, 
--    AVG(CAST((DATEPART(HOUR, ride_length) * 3600 
--      + DATEPART(MINUTE, ride_length) * 60 
--      + DATEPART(SECOND, ride_length)) AS BIGINT)) AS average_ride_length_in_seconds
--FROM All_2022_Trips
--GROUP BY member_casual;

----Rides by day of the week.

--CREATE VIEW rides_by_day AS
--SELECT
--    member_casual,
--    day_number,
--    COUNT(*) AS number_of_rides
--FROM All_2022_Trips
--GROUP BY member_casual, day_number;

----Popular stations for casuals.

--CREATE VIEW popular_locations_casual AS
--SELECT 
--    start_station_name,
--    COUNT(*) AS number_of_rides
--FROM All_2022_Trips
--WHERE member_casual = 'casual'
--GROUP BY start_station_name;

----Popular stations for members.

--CREATE VIEW popular_locations_members AS
--SELECT 
--    start_station_name,
--    COUNT(*) AS number_of_rides
--FROM All_2022_Trips
--WHERE member_casual = 'member'
--GROUP BY start_station_name;

--CREATE VIEW station_empty_times AS
--SELECT 
--    start_station_name,
--    COUNT(*) AS empty_times
--FROM All_2022_Trips
--WHERE start_station_name NOT IN (SELECT end_station_name FROM All_2022_Trips WHERE ended_at BETWEEN started_at AND started_at + INTERVAL '1' HOUR)
--GROUP BY start_station_name;

----Prefered rideable type.

--CREATE VIEW preferred_rideable_type AS
--SELECT 
--    rideable_type,
--    member_casual,
--    COUNT(*) AS count
--FROM 
--    All_2022_Trips
--GROUP BY 
--    rideable_type,
--    member_casual;

----Member vs casual activity through the week.

--CREATE VIEW weekly_activity AS
--SELECT
--    member_casual,
--    day_of_week,
--    COUNT(*) as trip_count
--FROM All_2022_Trips
--GROUP BY
--    member_casual,
--    day_of_week;

